@use '../global' as *;

@include font-face("Helvetica", "../fonts/helvetica-regular", 400);
@include font-face("Helvetica", "../fonts/helvetica-light", 300);
@include font-face("Helvetica", "../fonts/helvetica-bold", 700);


body,
input,
button,
textarea {
  font-family: $fontMain;
  font-weight: normal;
}

h2, h3, h4 {
  font-family: $fontMain;
  font-weight: bold;
  font-style: normal;
  font-family: $fontMain;
  font-weight: bold;
  line-height: 120%;
  color: $textColorPrimary;
}

h2 {
  font-size: 35px;
}

h3 {
  font-size: 35px;
}

span, a, p, button {
  font-family: $fontMain;
  font-weight: normal;
  font-style: normal;
  font-family: $fontMain;
  font-weight: normal;
  line-height: 120%;

  @include font-size(12px);
  color: $textColorPrimary;
}

$text-sizes: (
        large: 64px,
        title: 36px,
        subtitle: 24px,
        header-logo: 22px,
        accent: 18px,
        text: 14px,
        default: 12px,
        small: 9px,
);

$text-colors: (
        black: #000,
        white: #FFF,
        gray: #00000066,
        green: #219653,
        gray-blue: #0D1D47,
        gray-dark: #B0B0B0
);

.title {
  @extend %title;
  color: map-get($text-colors, black);

  &_size {
    @each $size, $val in $text-sizes {
      &_#{$size} {
        font-size: $val;
        @include more-than($bp-xxl-1442) {
          font-size: #{get-vw($val, $bp-xxl-1442)};
        }
      }
    }
  }

  &_color {
    @each $color, $val in $text-colors {
      &_#{$color} {
        color: $val;
      }
    }
  }

  &_weight {
    &_normal {
      font-family: $fontMain;
      font-weight: normal;
    }

    &_bold {
      font-family: $fontMain;
      font-weight: bold;
    }
  }
}

.link {
  @extend %text;
  color: map-get($text-colors, gray);
  display: inline-block;
  cursor: pointer;

  &:hover {
    text-decoration: underline;
    color: inherit;
  }

  &_size {
    @each $size, $val in $text-sizes {
      &_#{$size} {
        font-size: $val;
        @include more-than($bp-xxl-1442) {
          font-size: #{get-vw($val, $bp-xxl-1442)};
        }
      }
    }
  }

  &_color {
    @each $color, $val in $text-colors {
      &_#{$color} {
        color: $val;
      }
    }
  }

  &_weight {
    &_normal {
      font-family: $fontMain;
      font-weight: normal;
    }

    &_bold {
      font-family: $fontMain;
      font-weight: bold;
    }
  }
}

.text {
  @extend %text;
  color: map-get($text-colors, black);

  &_size {
    @each $size, $val in $text-sizes {
      &_#{$size} {
        font-size: $val;
        @include more-than($bp-xxl-1442) {
          font-size: #{get-vw($val, $bp-xxl-1442)};
        }
      }
    }
  }

  &_color {
    @each $color, $val in $text-colors {
      &_#{$color} {
        color: $val;
      }
    }
  }

  &_weight {
    &_normal {
      font-family: $fontMain;
      font-weight: normal;
    }

    &_bold {
      font-family: $fontMain;
      font-weight: bold;
    }
  }
}

.order-list {
  padding-left: 1em;


  &__item {
    list-style-type: decimal;

    & + & {
      margin-top: 8px;
    }
  }
}
